//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by conversion-gen. DO NOT EDIT.

package v1beta1

import (
	transformation "github.com/eonvon/cloud-native-tour/api-aggregation-lib-multi-version/pkg/api/transformation"
	transformationv1beta1 "github.com/eonvon/cloud-native-tour/api/transformation/v1beta1"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*transformationv1beta1.Base64)(nil), (*transformation.Base64)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_Base64_To_transformation_Base64(a.(*transformationv1beta1.Base64), b.(*transformation.Base64), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*transformation.Base64)(nil), (*transformationv1beta1.Base64)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_transformation_Base64_To_v1beta1_Base64(a.(*transformation.Base64), b.(*transformationv1beta1.Base64), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*transformationv1beta1.Base64Spec)(nil), (*transformation.Base64Spec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_Base64Spec_To_transformation_Base64Spec(a.(*transformationv1beta1.Base64Spec), b.(*transformation.Base64Spec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*transformation.Base64Spec)(nil), (*transformationv1beta1.Base64Spec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_transformation_Base64Spec_To_v1beta1_Base64Spec(a.(*transformation.Base64Spec), b.(*transformationv1beta1.Base64Spec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*transformationv1beta1.Base64Status)(nil), (*transformation.Base64Status)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_Base64Status_To_transformation_Base64Status(a.(*transformationv1beta1.Base64Status), b.(*transformation.Base64Status), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*transformation.Base64Status)(nil), (*transformationv1beta1.Base64Status)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_transformation_Base64Status_To_v1beta1_Base64Status(a.(*transformation.Base64Status), b.(*transformationv1beta1.Base64Status), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1beta1_Base64_To_transformation_Base64(in *transformationv1beta1.Base64, out *transformation.Base64, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1beta1_Base64Spec_To_transformation_Base64Spec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1beta1_Base64Status_To_transformation_Base64Status(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1beta1_Base64_To_transformation_Base64 is an autogenerated conversion function.
func Convert_v1beta1_Base64_To_transformation_Base64(in *transformationv1beta1.Base64, out *transformation.Base64, s conversion.Scope) error {
	return autoConvert_v1beta1_Base64_To_transformation_Base64(in, out, s)
}

func autoConvert_transformation_Base64_To_v1beta1_Base64(in *transformation.Base64, out *transformationv1beta1.Base64, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_transformation_Base64Spec_To_v1beta1_Base64Spec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_transformation_Base64Status_To_v1beta1_Base64Status(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_transformation_Base64_To_v1beta1_Base64 is an autogenerated conversion function.
func Convert_transformation_Base64_To_v1beta1_Base64(in *transformation.Base64, out *transformationv1beta1.Base64, s conversion.Scope) error {
	return autoConvert_transformation_Base64_To_v1beta1_Base64(in, out, s)
}

func autoConvert_v1beta1_Base64Spec_To_transformation_Base64Spec(in *transformationv1beta1.Base64Spec, out *transformation.Base64Spec, s conversion.Scope) error {
	out.FieldPath = in.FieldPath
	return nil
}

// Convert_v1beta1_Base64Spec_To_transformation_Base64Spec is an autogenerated conversion function.
func Convert_v1beta1_Base64Spec_To_transformation_Base64Spec(in *transformationv1beta1.Base64Spec, out *transformation.Base64Spec, s conversion.Scope) error {
	return autoConvert_v1beta1_Base64Spec_To_transformation_Base64Spec(in, out, s)
}

func autoConvert_transformation_Base64Spec_To_v1beta1_Base64Spec(in *transformation.Base64Spec, out *transformationv1beta1.Base64Spec, s conversion.Scope) error {
	out.FieldPath = in.FieldPath
	return nil
}

// Convert_transformation_Base64Spec_To_v1beta1_Base64Spec is an autogenerated conversion function.
func Convert_transformation_Base64Spec_To_v1beta1_Base64Spec(in *transformation.Base64Spec, out *transformationv1beta1.Base64Spec, s conversion.Scope) error {
	return autoConvert_transformation_Base64Spec_To_v1beta1_Base64Spec(in, out, s)
}

func autoConvert_v1beta1_Base64Status_To_transformation_Base64Status(in *transformationv1beta1.Base64Status, out *transformation.Base64Status, s conversion.Scope) error {
	out.Output = in.Output
	return nil
}

// Convert_v1beta1_Base64Status_To_transformation_Base64Status is an autogenerated conversion function.
func Convert_v1beta1_Base64Status_To_transformation_Base64Status(in *transformationv1beta1.Base64Status, out *transformation.Base64Status, s conversion.Scope) error {
	return autoConvert_v1beta1_Base64Status_To_transformation_Base64Status(in, out, s)
}

func autoConvert_transformation_Base64Status_To_v1beta1_Base64Status(in *transformation.Base64Status, out *transformationv1beta1.Base64Status, s conversion.Scope) error {
	out.Output = in.Output
	return nil
}

// Convert_transformation_Base64Status_To_v1beta1_Base64Status is an autogenerated conversion function.
func Convert_transformation_Base64Status_To_v1beta1_Base64Status(in *transformation.Base64Status, out *transformationv1beta1.Base64Status, s conversion.Scope) error {
	return autoConvert_transformation_Base64Status_To_v1beta1_Base64Status(in, out, s)
}
